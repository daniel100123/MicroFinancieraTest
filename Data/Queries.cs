namespace MicroFinanciera.Data
{
    public class Queries
    {
    }

    public class QryClient
    {
        public string getClients = "SELECT \r\n    id, \r\n    Nombre + '  ' + ISNULL(Apellido1, '') + '  ' + ISNULL(Apellido2, '') AS nombres, \r\n    Nombre, \r\n    ISNULL(Apellido1, '') AS Apellido1,\r\n    ISNULL(Apellido2, '') AS Apellido2, \r\n    FORMAT(FechaInicio, 'dd-MM-yyyy') AS FechaInicio, \r\n    Credito, \r\n    BaseInicial, \r\n    AhorroSemanal, \r\n    PagoTotalSemanal, \r\n    FORMAT(FechaInicio, 'dddd', 'es-ES') AS diaPago, \r\n    StatusId, \r\n    FORMAT(FechaRegistro, 'dd-MM-yyyy') AS fechaRegistro, \r\n    MetodoDePagoId,\r\n    ISNULL(Telefono, '') AS telefono, \r\n    ISNULL(Domicilio, '') AS domicilio, \r\n    ISNULL(Aval, '') AS aval, \r\n    ISNULL(TelefonoAval, '') AS telefonoAval,\r\n    ISNULL(Telefono2, '') AS Telefono2, \r\n    ISNULL(TelefonoAval2, '') AS TelefonoAval2, \r\n    ISNULL(DomicilioCasa, '') AS DomicilioCasa, \r\n    ISNULL(MedidasCasa, '') AS MedidasCasa, \r\n    ISNULL(DescripcionCasa, '') AS DescripcionCasa, \r\n    ISNULL(MarcaCarro, '') AS MarcaCarro, \r\n    ISNULL(ModeloCarro, '') AS ModeloCarro, \r\n    ISNULL(ColorCarro, '') AS ColorCarro, \r\n    ISNULL(KilometrajeCarro, '') AS KilometrajeCarro, \r\n    ISNULL(PlacasCarro, '') AS PlacasCarro, \r\n    ISNULL(UbicacionTerreno, '') AS UbicacionTerreno, \r\n    ISNULL(DimencionTerreno, '') AS dimensionTerreno, \r\n    ISNULL(MarcaMoto, '') AS MarcaMoto, \r\n    ISNULL(ModeloMoto, '') AS ModeloMoto, \r\n    ISNULL(ColorMoto, '') AS ColorMoto, \r\n    ISNULL(KilometrajeMoto, '') AS KilometrajeMoto, \r\n    ISNULL(PlacasMoto, '') AS PlacasMoto, \r\n    ISNULL(DescripcionOtro, '') AS DescripcionOtro, \r\n    ISNULL(Negocio, '') AS Negocio, \r\n    ISNULL(UbicacionNegocio, '') AS UbicacionNegocio, \r\n    ISNULL(TiempoNegocio, '') AS TiempoNegocio, \r\n    GarantiaId\r\nFROM \r\n    Clientes \r\nWHERE \r\n    Solicitud = 0";

        public string getClientsSolicitud = "SELECT \r\n    A.id, \r\n    A.Nombre + '  ' + ISNULL(A.Apellido1, '') + '  ' + ISNULL(A.Apellido2, '') AS nombres, \r\n    A.Nombre, \r\n    ISNULL(A.Apellido1, '') AS Apellido1, \r\n    ISNULL(A.Apellido2, '') AS Apellido2, \r\n    FORMAT(A.FechaInicio, 'dd-MM-yyyy') AS FechaInicio, \r\n\tFORMAT(ISNULL(A.FechaSolicitud,''), 'yyyy-MM-dd') AS FechaSolicitud, \r\n    A.Credito, \r\n    A.BaseInicial, \r\n    A.AhorroSemanal, \r\n    A.PagoTotalSemanal, \r\n    FORMAT(A.FechaInicio, 'dddd', 'es-ES') AS diaPago, \r\n    A.StatusId, \r\n    FORMAT(ISNULL(A.FechaRegistro,''), 'dd-MM-yyyy') AS fechaRegistro, \r\n    A.MetodoDePagoId, \r\n\tISNULL(A.GeneroId,0)generoId,\r\n\tISNULL(D.Descripcion, '') AS genero, \r\n    ISNULL(A.Telefono, '') AS telefono, \r\n\tFORMAT(ISNULL(A.FechaNacimiento,''), 'yyyy-MM-dd') AS fechaNacimiento, \r\n\tISNULL(A.Pais, '') AS pais, \r\n\tISNULL(A.Nacionalidad, '') AS nacionalidad, \r\n\tISNULL(A.EstadoCivil, '') AS estadoCivil, \r\n    ISNULL(A.Aval, '') AS aval, \r\n\t ISNULL(A.DomicilioAval, '') AS DomicilioAval, \r\n    ISNULL(A.TelefonoAval, '') AS telefonoAval, \r\n    ISNULL(A.Telefono2, '') AS Telefono2, \r\n    ISNULL(A.TelefonoAval2, '') AS TelefonoAval2, \r\n    ISNULL(A.DomicilioCasa, '') AS DomicilioCasa, \r\n    ISNULL(A.MedidasCasa, '') AS MedidasCasa, \r\n    ISNULL(A.DescripcionCasa, '') AS DescripcionCasa, \r\n    ISNULL(A.MarcaCarro, '') AS MarcaCarro, \r\n    ISNULL(A.ModeloCarro, '') AS ModeloCarro, \r\n    ISNULL(A.ColorCarro, '') AS ColorCarro, \r\n    ISNULL(A.KilometrajeCarro, '') AS KilometrajeCarro, \r\n    ISNULL(A.PlacasCarro, '') AS PlacasCarro, \r\n    ISNULL(A.UbicacionTerreno, '') AS UbicacionTerreno, \r\n    ISNULL(A.DimencionTerreno, '') AS dimensionTerreno, \r\n    ISNULL(A.MarcaMoto, '') AS MarcaMoto, \r\n    ISNULL(A.ModeloMoto, '') AS ModeloMoto, \r\n    ISNULL(A.ColorMoto, '') AS ColorMoto, \r\n    ISNULL(A.KilometrajeMoto, '') AS KilometrajeMoto, \r\n    ISNULL(A.PlacasMoto, '') AS PlacasMoto, \r\n    ISNULL(A.DescripcionOtro, '') AS DescripcionOtro, \r\n    A.GarantiaId ,\r\n\r\n\t ISNULL(B.TipoPropiedad, '') AS TipoPropiedad, \r\n\t ISNULL(B.domicilio, '') AS domicilio, \r\n\t ISNULL(B.Colonia, '') AS colonia, \r\n\t ISNULL(B.DelegacionMunicipio, '') AS DelegacionMunicipio, \r\n\t ISNULL(B.Poblacion, '') AS poblacion, \r\n\t ISNULL(B.Estado, '') AS estado, \r\n\t ISNULL(B.Pais, '') AS paisDomicilio, \r\n\t ISNULL(B.CP, '') AS codigoPostal, \r\n\t ISNULL(B.AniosResidencia, 0) AS AniosResidencia, \r\n\t ISNULL(B.DomicilioAnterior, 0) AS DomicilioAnterior, \r\n\t ISNULL(B.ColoniaAnterior, 0) AS ColoniaAnterior, \r\n\t ISNULL(B.DelegacionMunicipioAnterior, 0) AS DelegacionMunicipioAnterior,\r\n\r\n\t ISNULL(C.Empresa, '') AS empresa,\r\n\t ISNULL(C.GiroNegocio, '') AS GiroNegocio,\r\n\t ISNULL(C.Ocupacion, '') AS ocupacion,\r\n\t FORMAT(ISNULL(C.FechaIngreso,''), 'yyyy-MM-dd') AS FechaIngreso, \r\n\t ISNULL(C.SueldoMensual, 0) AS sueldo,\r\n\t ISNULL(C.FuenteOtrosIngresos, '') AS FuenteOtrosIngresos\r\nFROM \r\n    Clientes A\r\n    LEFT JOIN Domicilio B ON A.id = B.ClienteId \r\n\tLEFT JOIN Empleo C ON A.Id = C.ClienteId\r\n\tLEFT JOIN Genero D ON A.GeneroId = D.Id\r\n\tWHERE Solicitud = {0}\r\n";

        public string getClientsCatalago = "select id, Nombre + '  ' + Apellido1 + '  ' + Apellido2 as name from Clientes where StatusId =1 and solicitud = 0";

        public string getClinetPorName = "select id,Nombre as name,FORMAT(FechaInicio,'yyyy-MM-dd') as fecha from Clientes where Nombre = {0} and Apellido1 = {1} and Apellido2 = {2}";
        public string getClinetID = "select id,Nombre as name,FORMAT(FechaInicio,'yyyy-MM-dd') as fecha from Clientes where   id = {0}";
        public string getInsertaDetalleSemanal = "exec dbo.InsertarDetalleSemanasPorCliente {0},{1},{2}";

        //public string getDetallesemanalClient = "\r\nselect A.id,A.clienteId,A.Semana,FORMAT(A.FechaPago,'dd-MM-yyyy') as fechaPago,ISNULL(Format(A.FechaRealizada,'dd-MM-yyyy'),'') as FechaRealizada, \r\nISNULL(A.Ahorro,0)as ahorro,ISNULL(A.CantidadPagada,0) as CantidadPagada,CASE WHEN A.FechaPago = A.FechaRealizada or A.FechaPago > A.FechaRealizada THEN 0 WHEN A.FechaRealizada IS NULL and A.FechaPago > {0} THEN 0 WHEN A.FechaPago < A.FechaRealizada or A.FechaRealizada IS NULL and A.FechaPago < {0} THEN A.Comision END as comision,\r\n ISNULL(A.Total,0) as total, B.Credito,\r\nB.PagoTotalSemanal,B.BaseInicial,ISNUll(A.PagoComision,0) as pagoComision,B.AhorroSemanal\r\nfrom DetalleSemanas A INNER JOIN Clientes B ON A.clienteId = B.Id where clienteId = {1} AND A.CreditoId={2} order by A.Semana\r\n";

        //public string getDetallesSemanasRenovacion = "select A.id, A.clienteId, A.Semana, FORMAT(A.FechaPago, 'dd-MM-yyyy') as fechaPago, ISNULL(Format(A.FechaRealizada, 'dd-MM-yyyy'), '') as FechaRealizada, \r\nISNULL(A.Ahorro, 0) as ahorro, ISNULL(A.CantidadPagada, 0) as CantidadPagada, \r\nCASE WHEN A.FechaPago = A.FechaRealizada or A.FechaPago > A.FechaRealizada THEN 0 WHEN A.FechaRealizada IS NULL and A.FechaPago > {0} THEN 0 WHEN A.FechaPago < A.FechaRealizada or A.FechaRealizada IS NULL and A.FechaPago < {0} THEN A.Comision END as comision,\r\nISNULL(A.Total, 0) as total, C.Credito, C.PagoTotalSemanal, C.BaseInicial, ISNULL(A.PagoComision, 0) as pagoComision, \r\nC.AhorroSemanal from DetalleSemanas A INNER JOIN Clientes B ON A.clienteId = B.Id INNER JOIN ClientesCreditos C ON A.clienteId = C.ClienteId\r\nwhere A.clienteId = {1} AND A.CreditoId = {2} order by A.Semana\r\n";

        public string getDetalleSemanalClientes = "exec dbo.DetalleSemanalClient {0},{1},{2}";

        public string savePago = "exec dbo.ActualizarDetalleSemanasPorCliente {0},{1},{2},{3},{4},{5},{6},{7},{8}";

        public string getMetodoPago = "select id,Descripcion as name from MetodoDePago";
        public string getReporteSemanal = "exec dbo.ReporteSemanalGeneral {0},{1},{2},{3}";
        public string getReporteSemanal2 = "exec dbo.ReporteSemanal {0},{1},{2},{3}";

        //public string getReporteSemanal = "SELECT \r\n   A.id, B.Nombre + ' ' + B.Apellido1 + ' ' + B.Apellido2 AS cliente,\r\n   FORMAT(A.FechaPago,'yyyy-MM-dd') as fechaPago, CAST(A.Semana AS VARCHAR(10)) as semana,\r\n   A.CantidadPagada,ISNULL(A.Comision,0) as Comision,ISNULL(A.Total,0) as total,C.Descripcion as MetodoPago\r\nFROM \r\n    DetalleSemanas A\r\nINNER JOIN \r\n    Clientes B ON A.clienteId = B.Id INNER JOIN MetodoDePago C ON A.MetodoDePagoId = C.Id\r\nWHERE \r\n    A.FechaPago BETWEEN {0} AND DATEADD(dd, 0, {1})\r\n\tUNION ALL \r\n\tselect A.id, A.Nombre + ' ' + A.Apellido1 + ' ' + A.Apellido2 AS cliente,FORMAT(A.FechaInicio,'yyyy-MM-dd') as fechaPago,'base' as semana,\r\n\tA.BaseInicial,0 as comision,0 as total,B.Descripcion as MetodoPago from Clientes A INNER JOIN MetodoDePago B ON A.MetodoDePagoId = B.Id\r\n\tWHERE A.FechaInicio BETWEEN {0} AND DATEADD(dd, 0, {1})";

        public string getClientsDeudores = "select MAx(B.id) as id, B.Nombre + '  ' + ISNULL(B.Apellido1,'') + '  ' + ISNULL(B.Apellido2,'') as name \r\nfrom DetalleSemanas A INNER JOIN Clientes B ON A.clienteId = B.Id where FechaPago <= {0} and CantidadPagada  IS NULL\r\ngroup by B.Nombre,B.Apellido1,B.Apellido2\r\n";

        public string getListDeudores = "select A.Id, B.Nombre + '  ' + ISNULL(B.Apellido1,'') + '  ' + ISNULL(B.Apellido2,'') as name,A.Semana,FORMAT(A.FechaPago,'dd-MM-yyyy')as FechaPago,B.PagoTotalSemanal,B.Credito \r\nfrom DetalleSemanas A INNER JOIN Clientes B ON A.clienteId = B.Id \r\nwhere FechaPago <= {0} and CantidadPagada  IS NULL AND ({1} = 0 or B.Id = {1})";

        public string getDeudores = "select MAX(B.Id) as id, B.Nombre + '  ' + ISNULL(B.Apellido1,'') + '  ' + ISNULL(B.Apellido2,'') as name,\r\nB.Credito,\r\nFORMAT(B.FechaInicio,'dd-MM-yyyy') as FechaInicio ,B.PagoTotalSemanal,\r\n(select ISNULL(SUM(D.Ahorro),0) from DetalleSemanas D  WHERE D.clienteId = B.Id and D.CreditoId = B.CreditoId ) as ahorro,COUNT(*) as PagosPendientes,CASE \r\n        WHEN B.Credito < 60000 \r\n        THEN (B.Credito * 0.003)  * COUNT(*)\r\n        ELSE (B.Credito * 0.001) * COUNT(*)\r\n    END  as comision,\r\nSUM(B.PagoTotalSemanal) as adeudoTotal,\r\n(Select FORMAT(Ds.FechaPago,'dd-MM-yyyy') from DetalleSemanas Ds  where Ds.clienteId = B.Id and Ds.Semana = 16 and DS.CreditoId = B.CreditoId) as fechaFinaliza,\r\nA.CreditoId\r\nfrom DetalleSemanas A INNER JOIN Clientes B ON A.clienteId = B.Id AND A.CreditoId = B.CreditoId\r\nwhere FechaPago <= {0} and CantidadPagada  IS NULL \r\nGROUP BY B.Nombre,B.Apellido1,B.Apellido2,B.Credito,B.FechaInicio,B.PagoTotalSemanal,B.id,A.CreditoId,B.CreditoId\r\nUNION ALL\r\n\r\nselect  MAX(B.Id) as id,(select Cl.Nombre + '  ' + ISNULL(Cl.Apellido1,'') + '  ' + ISNULL(Cl.Apellido2,'') from Clientes Cl where Cl.Id= B.ClienteId) as name,\r\nB.Credito,\r\nFORMAT(B.FechaInicial,'dd-MM-yyyy') as FechaInicio ,B.PagoTotalSemanal,\r\n(select ISNULL(SUM(D.Ahorro),0) from DetalleSemanas D  WHERE D.clienteId = B.Id and D.CreditoId = B.CreditoId ) as ahorro,COUNT(*) as PagosPendientes,CASE \r\n        WHEN B.Credito < 60000 \r\n        THEN (B.Credito * 0.003)  * COUNT(*)\r\n        ELSE (B.Credito * 0.001) * COUNT(*)\r\n    END  as comision,\r\nSUM(B.PagoTotalSemanal) as adeudoTotal,\r\n(Select FORMAT(Ds.FechaPago,'dd-MM-yyyy') from DetalleSemanas Ds  where Ds.clienteId = B.ClienteId and Ds.Semana = 16 and DS.CreditoId = B.CreditoId) as fechaFinaliza,\r\nB.CreditoId \r\nfrom DetalleSemanas A INNER JOIN ClientesCreditos B ON A.clienteId = B.ClienteId AND A.CreditoId = B.CreditoId\r\nwhere FechaPago <= {0} and CantidadPagada  IS NULL \r\nGROUP BY B.Credito,B.FechaInicial,B.PagoTotalSemanal,B.CreditoId,B.ClienteId,B.id";

        public string getDeudoresDetails = "SELECT A.Id, A.Semana, FORMAT(A.FechaPago, 'dd-MM-yyyy') AS FechaPago,\r\nCASE WHEN B.Credito < 60000 THEN B.Credito * 0.003 ELSE B.Credito * 0.001 END AS comision,\r\n0 AS vmDeudoresid,(SELECT DATEDIFF(day, dts.FechaPago, '{0}')\r\nFROM DetalleSemanas dts\r\nWHERE dts.clienteId = B.Id AND dts.FechaPago < '{0}' AND dts.FechaPago = A.FechaPago\r\n) as dias FROM DetalleSemanas A INNER JOIN Clientes B ON A.clienteId = B.Id AND A.CreditoId = B.CreditoId WHERE \r\nFechaPago < '{0}' AND CantidadPagada IS NULL AND  ({1} = 0 OR B.Id = {1}) AND A.CreditoId = {2}\r\nUNION ALL\r\nSELECT A.Id, A.Semana, FORMAT(A.FechaPago, 'dd-MM-yyyy') AS FechaPago,\r\nCASE WHEN B.Credito < 60000 THEN B.Credito * 0.003 ELSE B.Credito * 0.001 END AS comision,\r\n0 AS vmDeudoresid,(SELECT DATEDIFF(day, dts.FechaPago, '{0}')\r\nFROM DetalleSemanas dts\r\nWHERE dts.clienteId = B.ClienteId AND dts.FechaPago < '{0}' AND dts.FechaPago = A.FechaPago And dts.CreditoId = B.CreditoId\r\n) as dias FROM DetalleSemanas A INNER JOIN ClientesCreditos B ON A.clienteId = B.ClienteId AND A.CreditoId = B.CreditoId WHERE \r\nFechaPago < '{0}' AND CantidadPagada IS NULL AND  ({1} = 0 OR B.ClienteId = {1}) AND A.CreditoId = {2}";

        public string getReTicket = "exec dbo.GETTicket {0},{1},{2},{3},{4},{5}";

        public string SaveRenovaciones = "exec dbo.SaveRenovaciones {0},{1},{2},{3},{4},{5},{6},{7},{8},{9},{10}";

        public string AprobarRenovaciones = "exec dbo.AprobarRenovaciones {0},{1},{2}";

        public string getCreditosCatalago = "select B.id, CAST(B.Id AS VARCHAR(10)) as name from Clientes A INNER JOIN Creditos B ON A.CreditoId = B.Id where A.id = {0} UNION ALL\r\nselect B.id,CAST(B.Id AS VARCHAR(10)) as name from ClientesCreditos A INNER JOIN Creditos B ON A.CreditoId = B.Id where A.ClienteId = {0}";

        public string getClinetesRenovacion = "select A.Id,A.ClienteId, B.Nombre + '  ' + ISNULL(B.Apellido1,'') + '  ' + ISNULL(B.Apellido2,'') as nombres,A.Credito,FORMAT(ISNULL(A.FechaInicial,''),'dd-MM-yyyy') as fechaInicio,A.BaseInicial,\r\nA.AhorroSemanal,A.PagoTotalSemanal,FORMAT(ISNULL(A.FechaInicial,''),'dddd','es-ES') as diaPago,B.StatusId,A.CreditoId,\r\nFORMAT(ISNULL(A.FechaFinalizaCreditoAnterior,''),'dd-MM-yyyy') as fechaFinalizaCreditoAnterior,A.MetodoDePagoId,FORMAT(ISNULL(A.FechaSolicitud,''),'dd-MM-yyyy') as fechaSolicitud\r\nfrom ClientesCreditos A inner JOIN Clientes B ON A.ClienteId = B.Id where B.StatusId = 1  and A.Aprobado = {0}";


        public string DeleteRenovaciones = "exec dbo.DeleteRenovaciones {0},{1},{2}";
        public string updatePago = "exec dbo.updatePago {0}";

        public string getGarantias = "select Id,Descripcion as name from Garantias";
        public string getGenero = "select id, Descripcion as name from Genero ";
        public string updatedomicilio = "exec dbo.updatEDomicilio {0},{1},{2},{3},{4},{5},{6},{7},{8},{9},{10},{11},{12}";
        public string updateEmpleo = "exec dbo.updatEEmpleo {0},{1},{2},{3},{4},{5},{6}";
    }

}
